{"{\"assumptions\":{},\"sourceRoot\":\"/Users/navemaymon/Desktop/EZWait/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/navemaymon/Desktop/EZWait\",\"filename\":\"/Users/navemaymon/Desktop/EZWait/test/appointmentController.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/navemaymon/Desktop/EZWait\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.0:development":{"value":{"code":"import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport app from '../controllers/appointmentController'; // Update the path accordingly\nchai.use(chaiHttp);\nconst {\n  expect\n} = chai;\ndescribe('Appointment Controller', () => {\n  describe('GET /api/appointments', () => {\n    it('should get all appointments', done => {\n      chai.request(app).get('/api/appointments').end((err, res) => {\n        expect(res).to.have.status(200);\n        expect(res.body).to.be.an('array');\n        done();\n      });\n    });\n  });\n  describe('POST /api/appointments/byUserName', () => {\n    it('should get appointments by user name', done => {\n      chai.request(app).post('/api/appointments/byUserName').send({\n        userName: 'exampleUser'\n      }) // replace with valid user name\n      .end((err, res) => {\n        expect(res).to.have.status(200);\n        expect(res.body).to.be.an('array');\n        done();\n      });\n    });\n  });\n  describe('POST /api/appointments', () => {\n    it('should create a new appointment', done => {\n      chai.request(app).post('/api/appointments').send({\n        // provide appointment data for creation\n      }).end((err, res) => {\n        expect(res).to.have.status(200);\n        expect(res.text).to.equal('New appointment created successfully');\n        done();\n      });\n    });\n    it('should handle errors when creating a new appointment', done => {\n      chai.request(app).post('/api/appointments').send({\n        // provide invalid appointment data for creation\n      }).end((err, res) => {\n        expect(res).to.have.status(500);\n        expect(res.text).to.equal('Internal server error');\n        done();\n      });\n    });\n  });\n  describe('GET /api/appointments/:id', () => {\n    it('should get an appointment by ID', done => {\n      chai.request(app).get('/api/appointments/1') // replace with a valid appointment ID\n      .end((err, res) => {\n        expect(res).to.have.status(200);\n        expect(res.body).to.be.an('object');\n        done();\n      });\n    });\n    it('should handle errors when getting an appointment by invalid ID', done => {\n      chai.request(app).get('/api/appointments/invalidId').end((err, res) => {\n        expect(res).to.have.status(500);\n        expect(res.text).to.equal('Internal server error');\n        done();\n      });\n    });\n    it('should handle not found when getting an appointment by non-existent ID', done => {\n      chai.request(app).get('/api/appointments/nonExistentId').end((err, res) => {\n        expect(res).to.have.status(404);\n        expect(res.text).to.equal('Appointment not found');\n        done();\n      });\n    });\n  });\n\n  // Add more test cases for other CRUD operations\n\n  // Example: testing appointment update\n  describe('PUT /api/appointments/:id', () => {\n    it('should update an appointment by ID', done => {\n      chai.request(app).put('/api/appointments/1') // replace with a valid appointment ID\n      .send({\n        // provide updated appointment data\n      }).end((err, res) => {\n        expect(res).to.have.status(200);\n        expect(res.text).to.equal('Updated');\n        done();\n      });\n    });\n    it('should handle errors when updating an appointment with invalid data', done => {\n      chai.request(app).put('/api/appointments/1') // replace with a valid appointment ID\n      .send({\n        // provide invalid updated appointment data\n      }).end((err, res) => {\n        expect(res).to.have.status(500);\n        expect(res.text).to.equal('Internal server error');\n        done();\n      });\n    });\n    it('should handle not found when updating a non-existent appointment', done => {\n      chai.request(app).put('/api/appointments/nonExistentId').send({\n        // provide updated appointment data\n      }).end((err, res) => {\n        expect(res).to.have.status(404);\n        expect(res.text).to.equal('Appointment not found');\n        done();\n      });\n    });\n  });\n\n  // Add more test cases for other endpoints\n});\nmodule.exports = app; // export your express app for testing\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["chai","chaiHttp","app","use","expect","describe","it","done","request","get","end","err","res","to","have","status","body","be","an","post","send","userName","text","equal","put","module","exports"],"sourceRoot":"/Users/navemaymon/Desktop/EZWait/test/","sources":["appointmentController.test.js"],"sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport app from '../controllers/appointmentController'; // Update the path accordingly\nchai.use(chaiHttp);\n\nconst { expect } = chai;\n\ndescribe('Appointment Controller', () => {\n    describe('GET /api/appointments', () => {\n        it('should get all appointments', (done) => {\n            chai.request(app)\n                .get('/api/appointments')\n                .end((err, res) => {\n                    expect(res).to.have.status(200);\n                    expect(res.body).to.be.an('array');\n                    done();\n                });\n        });\n    });\n\n    describe('POST /api/appointments/byUserName', () => {\n        it('should get appointments by user name', (done) => {\n            chai.request(app)\n                .post('/api/appointments/byUserName')\n                .send({ userName: 'exampleUser' }) // replace with valid user name\n                .end((err, res) => {\n                    expect(res).to.have.status(200);\n                    expect(res.body).to.be.an('array');\n                    done();\n                });\n        });\n    });\n\n    describe('POST /api/appointments', () => {\n        it('should create a new appointment', (done) => {\n            chai.request(app)\n                .post('/api/appointments')\n                .send({\n                    // provide appointment data for creation\n                })\n                .end((err, res) => {\n                    expect(res).to.have.status(200);\n                    expect(res.text).to.equal('New appointment created successfully');\n                    done();\n                });\n        });\n\n        it('should handle errors when creating a new appointment', (done) => {\n            chai.request(app)\n                .post('/api/appointments')\n                .send({\n                    // provide invalid appointment data for creation\n                })\n                .end((err, res) => {\n                    expect(res).to.have.status(500);\n                    expect(res.text).to.equal('Internal server error');\n                    done();\n                });\n        });\n    });\n\n    describe('GET /api/appointments/:id', () => {\n        it('should get an appointment by ID', (done) => {\n            chai.request(app)\n                .get('/api/appointments/1') // replace with a valid appointment ID\n                .end((err, res) => {\n                    expect(res).to.have.status(200);\n                    expect(res.body).to.be.an('object');\n                    done();\n                });\n        });\n\n        it('should handle errors when getting an appointment by invalid ID', (done) => {\n            chai.request(app)\n                .get('/api/appointments/invalidId')\n                .end((err, res) => {\n                    expect(res).to.have.status(500);\n                    expect(res.text).to.equal('Internal server error');\n                    done();\n                });\n        });\n\n        it('should handle not found when getting an appointment by non-existent ID', (done) => {\n            chai.request(app)\n                .get('/api/appointments/nonExistentId')\n                .end((err, res) => {\n                    expect(res).to.have.status(404);\n                    expect(res.text).to.equal('Appointment not found');\n                    done();\n                });\n        });\n    });\n\n    // Add more test cases for other CRUD operations\n\n    // Example: testing appointment update\n    describe('PUT /api/appointments/:id', () => {\n        it('should update an appointment by ID', (done) => {\n            chai.request(app)\n                .put('/api/appointments/1') // replace with a valid appointment ID\n                .send({\n                    // provide updated appointment data\n                })\n                .end((err, res) => {\n                    expect(res).to.have.status(200);\n                    expect(res.text).to.equal('Updated');\n                    done();\n                });\n        });\n\n        it('should handle errors when updating an appointment with invalid data', (done) => {\n            chai.request(app)\n                .put('/api/appointments/1') // replace with a valid appointment ID\n                .send({\n                    // provide invalid updated appointment data\n                })\n                .end((err, res) => {\n                    expect(res).to.have.status(500);\n                    expect(res.text).to.equal('Internal server error');\n                    done();\n                });\n        });\n\n        it('should handle not found when updating a non-existent appointment', (done) => {\n            chai.request(app)\n                .put('/api/appointments/nonExistentId')\n                .send({\n                    // provide updated appointment data\n                })\n                .end((err, res) => {\n                    expect(res).to.have.status(404);\n                    expect(res.text).to.equal('Appointment not found');\n                    done();\n                });\n        });\n    });\n\n    // Add more test cases for other endpoints\n\n});\nmodule.exports = app; // export your express app for testing\n"],"mappings":"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","ignoreList":[]}},"mtime":1709548250665}}